/*==============================================================*/
/* 建立表空间                                     */
/*==============================================================*/
create tablespace TS_BM
datafile  '/udata/oracle/oradata/ykt/ts_bm.dbf'
size 100M

/*==============================================================*/
/* 建立用户                                     */
/*==============================================================*/
create user YKT_BM
  identified by "kingstar"
  default tablespace TS_BM
  temporary tablespace TEMP
  profile DEFAULT
  quota unlimited on ts_bm;
  
/*==============================================================*/
/* Table: bm_access_info                                      */
/*==============================================================*/
create table ykt_bm.bm_access_info  (
   id                 VARCHAR(32)                     not null,
   user_name          VARCHAR(32),
   true_name          VARCHAR(60),
   access_date        VARCHAR(10),
   access_time        VARCHAR(8),
   ip_address         VARCHAR(20),
   constraint PK_BM_ACCESS primary key (id)
);

/*==============================================================*/
/* Table: bm_department                                       */
/*==============================================================*/
create table ykt_bm.bm_department  (
   dept_code          VARCHAR(20)                     not null,
   dept_name          VARCHAR(100),
   soryby             FLOAT,
   reserve1           VARCHAR(100),
   reserve2           VARCHAR(100),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_DEPT primary key (dept_code)
);

/*==============================================================*/
/* Table: bm_major                                            */
/*==============================================================*/
create table ykt_bm.bm_major  (
   major_code         VARCHAR(20)                     not null,
   major_name         VARCHAR(100),
   in_dept            VARCHAR(20),
   sortby             FLOAT,
   reserve1           VARCHAR(100),
   reserve2           VARCHAR(100),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_MAJOR primary key (major_code)
);


/*==============================================================*/
/* Table: bm_stu_bm                                           */
/*==============================================================*/
create table ykt_bm.bm_stu_bm  (
   id                 VARCHAR(32)                     not null,
   student_no         VARCHAR(20),
   test_id            VARCHAR(32),
   if_bm              CHARACTER(1),
   bm_time            VARCHAR(20),
   if_pay             CHARACTER(1),
   fee_payed          NUMBER(9,2),
   pay_time           VARCHAR(20),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_STU_BM primary key (id)
);

/*==============================================================*/
/* Table: bm_student                                          */
/*==============================================================*/
create table ykt_bm.bm_student  (
   student_no         VARCHAR(20)                     not null,
   stu_name           VARCHAR(60),
   gender             VARCHAR(4),
   enroll_year        VARCHAR(4),
   dept_name          VARCHAR(100),
   major_name         VARCHAR(100),
   cur_grade          VARCHAR(20),
   cur_class          VARCHAR(60),
   id_type            VARCHAR(20),
   id_card            VARCHAR(20),
   email              VARCHAR(60),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_STUDENT primary key (student_no)
);

/*==============================================================*/
/* Table: bm_test                                             */
/*==============================================================*/
create table ykt_bm.bm_test  (
   id                 VARCHAR(32)                     not null,
   test_cat_id        VARCHAR(32),
   bm_begin_date      VARCHAR(10),
   bm_begin_time      VARCHAR(8),
   bm_end_date        VARCHAR(10),
   bm_end_time        VARCHAR(8),
   test_date          VARCHAR(10),
   test_begin_time    VARCHAR(8),
   test_end_time      VARCHAR(8),
   test_memo          VARCHAR(500),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_TEST primary key (id)
);

/*==============================================================*/
/* Table: bm_test_cat                                         */
/*==============================================================*/
create table ykt_bm.bm_test_cat  (
   id                 VARCHAR(32)                     not null,
   test_cat_name      VARCHAR(100),
   if_fee             CHARACTER(1),
   fee                NUMBER(9,2),
   state              CHARACTER(1),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_TEST_CAT primary key (id)
);

/*==============================================================*/
/* Table: bm_test_publish                                     */
/*==============================================================*/
create table ykt_bm.bm_test_publish  (
   id                 VARCHAR(32)                     not null,
   title              VARCHAR(200),
   body               CLOB,
   if_display         CHARACTER(1),
   if_public          CHARACTER(1),
   creator            VARCHAR(32),
   create_time        VARCHAR(20),
   updator            VARCHAR(32),
   update_time        VARCHAR(20),
   constraint PK_BM_TEST_PUB primary key (id)
);

alter table ykt_bm.bm_stu_bm
   add constraint FK_BM_STU foreign key (student_no)
      references ykt_bm.bm_student (student_no);

alter table ykt_bm.bm_stu_bm
   add constraint FK_BM_TEST foreign key (test_id)
      references ykt_bm.bm_test (id);
      
alter table ykt_bm.bm_test
   add constraint FK_TEST foreign key (test_cat_id)
      references ykt_bm.bm_test_cat (id);  

--==============================================================
-- Table: base_tables
--==============================================================

CREATE TABLE YKT_BM.PERSON
 (ID           VARCHAR(32)     NOT NULL,
  PERSON_CODE  VARCHAR(32)     NOT NULL,
  PERSON_NAME  VARCHAR(200)    NOT NULL,
  PERSON_TYPE  CHARACTER(1),
  SEX          CHARACTER(1),
  CARD_ID      VARCHAR(32),
  EMAIL        VARCHAR(50),
  QQ           VARCHAR(32),
  PHONE        VARCHAR(32),
  CARD         VARCHAR(32),
  BIRTHDAY     CHARACTER(8),
  DEPT         VARCHAR(32),
  POST         VARCHAR(32),
  POST_DATE    CHARACTER(8),
  WORK_PLACE   VARCHAR(100),
  OFFICE       VARCHAR(100),
  OFFICE_PHONE VARCHAR(32),
  ADDRESS      VARCHAR(100),
  POSTALCODE   VARCHAR(10),
  MSN          VARCHAR(32),
  POLITY       VARCHAR(32),
  NATION       VARCHAR(32),
  WORK_DATE    CHARACTER(8),
  TECH_POST    VARCHAR(32),
  SEMINARY     VARCHAR(32),
  GRADUCATION  CHARACTER(8),
  EDUCATION    VARCHAR(32),
  DEGREE       VARCHAR(32),
  REMARK       VARCHAR(100),
  QUESTION     VARCHAR(100),
  ANSWER       VARCHAR(100),
  CREATEDATE   CHARACTER(8),
  LASTDATE     CHARACTER(8),
  SORT         VARCHAR(32),
  COLLEGE      VARCHAR(100),
  DEPARTMENT   VARCHAR(32),
  GRADE        VARCHAR(32),
  BRIEF        VARCHAR(200),
  STRONG_SUIT  VARCHAR(100),
  CAMPUS       VARCHAR(32),
  DORM         VARCHAR(32),
  DORM_PHONE   VARCHAR(32)  
 );
 
 ALTER TABLE YKT_BM.USR_PERSON
  ADD CONSTRAINT P_KEY_8 PRIMARY KEY
   (ID
   );
   
   CREATE TABLE YKT_BM.USR_ACCOUNT
 (ID            VARCHAR(32)     NOT NULL,
  ACCOUNT_NAME  VARCHAR(64)     NOT NULL,
  PASSWORD      VARCHAR(64),
  ENABLED       CHARACTER(1)              DEFAULT '0'
 );
 ALTER TABLE YKT_BM.USR_ACCOUNT
  ADD CONSTRAINT P_KEY_1 PRIMARY KEY
   (ID
   );
   
   CREATE TABLE YKT_BM.ICO_ACCOUNT_ROLE
 (ACCOUNT_ID  VARCHAR(32)     NOT NULL,
  ROLE_ID     VARCHAR(32)     NOT NULL
 );
 
 ALTER TABLE YKT_BM.ICO_ACCOUNT_ROLE
  ADD CONSTRAINT P_KEY_4 PRIMARY KEY
   (ACCOUNT_ID,
    ROLE_ID
   );

CREATE TABLE YKT_BM.ICO_MENU
 (ID         VARCHAR(32)     NOT NULL,
  PID        VARCHAR(32)     default '0' not null,
  MENU_NAME  VARCHAR(32)     NOT NULL,
  URL        VARCHAR(255),
  TITLE      VARCHAR(255),
  TARGET     VARCHAR(255),
  ICON       VARCHAR(255),
  ICONOPEN   VARCHAR(255),
  OPENED     CHARACTER(1),
  SORT_FLAG  INTEGER                   DEFAULT 0
 );
 
ALTER TABLE YKT_BM.ICO_MENU
  ADD CONSTRAINT P_KEY_7 PRIMARY KEY
   (ID
   );
   
CREATE TABLE YKT_BM.ICO_PERMISSION
 (ROLE_ID      VARCHAR(32)     NOT NULL,
  RESOURCE_ID  VARCHAR(32)     NOT NULL
 );
 
 ALTER TABLE YKT_BM.ICO_PERMISSION
  ADD CONSTRAINT P_KEY_5 PRIMARY KEY
   (ROLE_ID,
    RESOURCE_ID
   );

CREATE TABLE YKT_BM.ICO_RESOURCE
 (ID             VARCHAR(32)     NOT NULL,
  RESOURCE_CODE  VARCHAR(32)     NOT NULL,
  RESOURCE_NAME  VARCHAR(255)    NOT NULL,
  PARENT_NAME    VARCHAR(255),
  URL            VARCHAR(255),
  ACL_CLASS      VARCHAR(255)
 );
 
 
ALTER TABLE YKT_BM.ICO_RESOURCE
  ADD CONSTRAINT P_KEY_3 PRIMARY KEY
   (ID
   );

CREATE TABLE YKT_BM.ICO_ROLE
 (ID         VARCHAR(32)     NOT NULL,
  ROLE_NAME  VARCHAR(64)     NOT NULL,
  ROLE_TYPE  CHARACTER(1),
  REMARK     VARCHAR(255)
 );
ALTER TABLE YKT_BM.ICO_ROLE
  ADD CONSTRAINT P_KEY_2 PRIMARY KEY
   (ID
   );


CREATE TABLE YKT_BM.ICO_ROLE_MENU
 (ROLE_ID  VARCHAR(32)     NOT NULL,
  MENU_ID  VARCHAR(32)     NOT NULL
 );

ALTER TABLE YKT_BM.ICO_ROLE_MENU
  ADD CONSTRAINT P_KEY_6 PRIMARY KEY
   (ROLE_ID,
    MENU_ID
   );