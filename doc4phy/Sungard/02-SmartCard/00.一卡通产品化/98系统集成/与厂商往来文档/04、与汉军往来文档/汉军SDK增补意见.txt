Q: 连接GCU/NCU 函数的返回信息更加完善, 增加三种连接错误情况, 
	a: 主机不可达: 可能主机关机
	b: 网络不可达: 路由无法正确找到主机
	c: 连接被拒绝: 连接主机的端口并没有侦听
	
A: 我们会把SDK的OpenChannel修改一下，增加尽量多的错误返回。

Q: 使用短连接方式是否可靠?
A: 目前的我们推荐客户的连接方式：执行硬件的设置时，打开连接后，使用完毕即关闭连接；
进行记录的实时收取时，一直保持连接，发现返回错误，视错误代码重新进行连接。
最多1024
这个DLL在单一地址空间，最多同时连接1024个网络设备，最多同时连接256个串口设备。
支持多线程进行处理
	

Q: 对于SDK创建的socket handle 设置了哪些属性(setsockopt) ? 我想了解这个 socket handle 的一些参数,以便做更细节的控制.


Q: 将socket 的 handle 设置为 SO_LINGER 属性
A: SO_LINGER 的部分，对我来说不用担心。
因为我的每次对设备操作，一定要有设备的回应才能算是正确。
所以不用担心数据没有发送完，就立即关闭socket
流程是，我发一个控制命令给NCU，NCU解析命令并且成功执行以后，再返回一个回应给计算机，说操作完成。

你尽量长一点，没有关系。
而且SDK也做了处理
假设你只设定10毫秒，我等待10毫秒以后，发现只读取到一个起始代码，
那么还会继续等待100毫秒，并且最多等待6个循环，等后续的字节读取完毕

Q. SDK中关闭socket的接口是否调用过 shutdown ?
A: SDK中关闭socket的目前不调用shutdown
我们可以做出一个新的函数或者选项来，让你进行选择性的调用
	

Q. 使用 GCC 3.2 与 GCC3.4或以上的版本各编译一套ＳＤＫ
A. 需要评估工作量


A: 目前我们用的是重叠模型来操作socket和com口, 对数据的校验采用CRC32


Q: 检测NCU是否联机的函数会对NCU执行性能有影响吗?
A: 你可以一直检测,一般每隔1秒一次或者5秒一次

Q: 有没有办法检测NCU下面的设备是否联机?
A: 下层设备一旦联机或者断线，立即会有事件传上来

Q: 那么GCU和RAC有这种机制吗?
A: GCU/RAC Polling有
	如果你不Polling那么不能知道是否断线
	需要特别执行命令去检测
	这样效率就低了。
	
Q: 